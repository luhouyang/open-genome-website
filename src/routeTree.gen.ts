/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DatabaseModelIdImport } from './routes/database/$modelId'
import { Route as AcademyAritcleIdImport } from './routes/academy/$aritcleId'

// Create Virtual Routes

const ToolkitIndexLazyImport = createFileRoute('/toolkit/')()
const LoginIndexLazyImport = createFileRoute('/login/')()
const DatabaseIndexLazyImport = createFileRoute('/database/')()
const ContributeIndexLazyImport = createFileRoute('/contribute/')()
const AcademyIndexLazyImport = createFileRoute('/academy/')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ToolkitIndexLazyRoute = ToolkitIndexLazyImport.update({
  id: '/toolkit/',
  path: '/toolkit/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/toolkit/index.lazy').then((d) => d.Route))

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route))

const DatabaseIndexLazyRoute = DatabaseIndexLazyImport.update({
  id: '/database/',
  path: '/database/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/database/index.lazy').then((d) => d.Route),
)

const ContributeIndexLazyRoute = ContributeIndexLazyImport.update({
  id: '/contribute/',
  path: '/contribute/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/contribute/index.lazy').then((d) => d.Route),
)

const AcademyIndexLazyRoute = AcademyIndexLazyImport.update({
  id: '/academy/',
  path: '/academy/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/academy/index.lazy').then((d) => d.Route))

const DatabaseModelIdRoute = DatabaseModelIdImport.update({
  id: '/database/$modelId',
  path: '/database/$modelId',
  getParentRoute: () => rootRoute,
} as any)

const AcademyAritcleIdRoute = AcademyAritcleIdImport.update({
  id: '/academy/$aritcleId',
  path: '/academy/$aritcleId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/academy/$aritcleId': {
      id: '/academy/$aritcleId'
      path: '/academy/$aritcleId'
      fullPath: '/academy/$aritcleId'
      preLoaderRoute: typeof AcademyAritcleIdImport
      parentRoute: typeof rootRoute
    }
    '/database/$modelId': {
      id: '/database/$modelId'
      path: '/database/$modelId'
      fullPath: '/database/$modelId'
      preLoaderRoute: typeof DatabaseModelIdImport
      parentRoute: typeof rootRoute
    }
    '/academy/': {
      id: '/academy/'
      path: '/academy'
      fullPath: '/academy'
      preLoaderRoute: typeof AcademyIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/contribute/': {
      id: '/contribute/'
      path: '/contribute'
      fullPath: '/contribute'
      preLoaderRoute: typeof ContributeIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/database/': {
      id: '/database/'
      path: '/database'
      fullPath: '/database'
      preLoaderRoute: typeof DatabaseIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/toolkit/': {
      id: '/toolkit/'
      path: '/toolkit'
      fullPath: '/toolkit'
      preLoaderRoute: typeof ToolkitIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/academy/$aritcleId': typeof AcademyAritcleIdRoute
  '/database/$modelId': typeof DatabaseModelIdRoute
  '/academy': typeof AcademyIndexLazyRoute
  '/contribute': typeof ContributeIndexLazyRoute
  '/database': typeof DatabaseIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/toolkit': typeof ToolkitIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/academy/$aritcleId': typeof AcademyAritcleIdRoute
  '/database/$modelId': typeof DatabaseModelIdRoute
  '/academy': typeof AcademyIndexLazyRoute
  '/contribute': typeof ContributeIndexLazyRoute
  '/database': typeof DatabaseIndexLazyRoute
  '/login': typeof LoginIndexLazyRoute
  '/toolkit': typeof ToolkitIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/academy/$aritcleId': typeof AcademyAritcleIdRoute
  '/database/$modelId': typeof DatabaseModelIdRoute
  '/academy/': typeof AcademyIndexLazyRoute
  '/contribute/': typeof ContributeIndexLazyRoute
  '/database/': typeof DatabaseIndexLazyRoute
  '/login/': typeof LoginIndexLazyRoute
  '/toolkit/': typeof ToolkitIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/academy/$aritcleId'
    | '/database/$modelId'
    | '/academy'
    | '/contribute'
    | '/database'
    | '/login'
    | '/toolkit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/academy/$aritcleId'
    | '/database/$modelId'
    | '/academy'
    | '/contribute'
    | '/database'
    | '/login'
    | '/toolkit'
  id:
    | '__root__'
    | '/'
    | '/academy/$aritcleId'
    | '/database/$modelId'
    | '/academy/'
    | '/contribute/'
    | '/database/'
    | '/login/'
    | '/toolkit/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AcademyAritcleIdRoute: typeof AcademyAritcleIdRoute
  DatabaseModelIdRoute: typeof DatabaseModelIdRoute
  AcademyIndexLazyRoute: typeof AcademyIndexLazyRoute
  ContributeIndexLazyRoute: typeof ContributeIndexLazyRoute
  DatabaseIndexLazyRoute: typeof DatabaseIndexLazyRoute
  LoginIndexLazyRoute: typeof LoginIndexLazyRoute
  ToolkitIndexLazyRoute: typeof ToolkitIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AcademyAritcleIdRoute: AcademyAritcleIdRoute,
  DatabaseModelIdRoute: DatabaseModelIdRoute,
  AcademyIndexLazyRoute: AcademyIndexLazyRoute,
  ContributeIndexLazyRoute: ContributeIndexLazyRoute,
  DatabaseIndexLazyRoute: DatabaseIndexLazyRoute,
  LoginIndexLazyRoute: LoginIndexLazyRoute,
  ToolkitIndexLazyRoute: ToolkitIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/academy/$aritcleId",
        "/database/$modelId",
        "/academy/",
        "/contribute/",
        "/database/",
        "/login/",
        "/toolkit/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/academy/$aritcleId": {
      "filePath": "academy/$aritcleId.tsx"
    },
    "/database/$modelId": {
      "filePath": "database/$modelId.tsx"
    },
    "/academy/": {
      "filePath": "academy/index.lazy.tsx"
    },
    "/contribute/": {
      "filePath": "contribute/index.lazy.tsx"
    },
    "/database/": {
      "filePath": "database/index.lazy.tsx"
    },
    "/login/": {
      "filePath": "login/index.lazy.tsx"
    },
    "/toolkit/": {
      "filePath": "toolkit/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
